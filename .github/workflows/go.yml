# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      PGUSER: pgpkg
      PGPASSWORD: pgpkg
      PGDATABASE: test
      PGSSLMODE: disable

    services:
      postgres:
        image: postgres:16  # Or any other version you need
        env:
          POSTGRES_USER: pgpkg
          POSTGRES_PASSWORD: pgpkg
          POSTGRES_DB: test
        ports:
          - 5432:5432  # Optional; exposes for other steps if needed
        options: >-
          --health-cmd="pg_isready -U myuser" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build ./...

    - name: Wait for Postgres to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U myuser; then
            echo "Postgres is ready!"
            exit 0
          fi
          sleep 5
        done
        echo "Postgres did not become ready in time" >&2
        exit 1


    - name: Test
      run: go test -v ./...

    - name: Set up GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        version: 'latest'
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}